{"mode":"Text","hardwareTarget":"brain","textContent":"#region VEXcode Generated Robot Configuration\nfrom vex import *\nimport urandom\n\n# Brain should be defined by default\nbrain=Brain()\n\n# Robot configuration code\n# AI Classification Competition Element IDs\nclass GameElements:\n    MOBILE_GOAL = 0\n    RED_RING = 1\n    BLUE_RING = 2\nleft_motor_a = Motor(Ports.PORT2, GearSetting.RATIO_6_1, True)\nleft_motor_b = Motor(Ports.PORT3, GearSetting.RATIO_6_1, True)\nleft_drive_smart = MotorGroup(left_motor_a, left_motor_b)\nright_motor_a = Motor(Ports.PORT1, GearSetting.RATIO_6_1, False)\nright_motor_b = Motor(Ports.PORT4, GearSetting.RATIO_6_1, False)\nright_drive_smart = MotorGroup(right_motor_a, right_motor_b)\ndrivetrain = DriveTrain(left_drive_smart, right_drive_smart, 319.19, 295, 40, MM, 1)\narm_motor_a = Motor(Ports.PORT5, GearSetting.RATIO_36_1, True)\narm_motor_b = Motor(Ports.PORT12, GearSetting.RATIO_36_1, False)\narm = MotorGroup(arm_motor_a, arm_motor_b)\nintake = Motor(Ports.PORT11, GearSetting.RATIO_6_1, False)\nchain = Motor(Ports.PORT13, GearSetting.RATIO_6_1, False)\n# AI Vision Color Descriptions\n# AI Vision Code Descriptions\nai = AiVision(Ports.PORT16, AiVision.ALL_AIOBJS)\nclamp = DigitalOut(brain.three_wire_port.h)\ndist = Distance(Ports.PORT10)\n\n\n# wait for rotation sensor to fully initialize\nwait(30, MSEC)\n\n\n# Make random actually random\ndef initializeRandomSeed():\n    wait(100, MSEC)\n    random = brain.battery.voltage(MV) + brain.battery.current(CurrentUnits.AMP) * 100 + brain.timer.system_high_res()\n    urandom.seed(int(random))\n      \n# Set random seed \ninitializeRandomSeed()\n\n\ndef play_vexcode_sound(sound_name):\n    # Helper to make playing sounds from the V5 in VEXcode easier and\n    # keeps the code cleaner by making it clear what is happening.\n    print(\"VEXPlaySound:\" + sound_name)\n    wait(5, MSEC)\n\n# add a small delay to make sure we don't print in the middle of the REPL header\nwait(200, MSEC)\n# clear the console to make sure we don't have the REPL in the console\nprint(\"\\033[2J\")\n\n#endregion VEXcode Generated Robot Configuration\n\n# ------------------------------------------\n# \n# \tProject:      VEXcode Project\n#\tAuthor:       VEX\n#\tCreated:\n#\tDescription:  VEXcode V5 Python Project\n# \n# ------------------------------------------\n\n# Library imports\nfrom vex import *\n\n# Begin project code\n# Blue alliance top right by negative corner by 8 stack\ndrivetrain.set_drive_velocity(75,PERCENT)\ndrivetrain.set_turn_velocity(75,PERCENT)\nintake.set_velocity(600,RPM)\nchain.set_velocity(400,RPM)\ndef auton():\n    arm.spin_for(FORWARD, 50, DEGREES)\n    drivetrain.drive_for(REVERSE, 16, INCHES)\n    clamp.set(True)\n    drivetrain.drive(REVERSE,1,INCHES)\n    drivetrain.turn_for(LEFT, 90,DEGREES)\n    intake.spin_for(FORWARD)\n    chain.spin_for(REVERSE)\n    drivetrain.drive_for(FORWARD, 26,INCHES)\n    wait(1,SECONDS)\n    drivetrain.turn_for(LEFT,90,DEGREES)\n    drivetrain.drive_for(FORWARD,6,INCHES)\n    wait(1,SECONDS)\n    drivetrain.drive_for(REVERSE,6,INCHES)\n    drivetrain.turn_for(LEFT,45,DEGREES)\n    drivetrain.drive_for(FORWARD,6,INCHES)\n    wait(1,SECONDS)\n    drivetrain.drive_for(REVERSE,6,INCHES)\n    drivetrain.turn_for(LEFT,22.5,DEGREES)\n    drivetrain.drive_for(FORWARD,34,INCHES)\n    intake.stop()\n    chain.stop()\n    \nauton()\n\nauton()","textLanguage":"python","robotConfig":[{"port":[2,3,1,4,0],"name":"drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio6_1","gearRatio":"1:1","direction":"rev","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"},"triportSourcePort":null},{"port":[5,12],"name":"arm","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio36_1","motor_a_reversed":"true","motor_b_reversed":"false"},"triportSourcePort":22},{"port":[11],"name":"intake","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[13],"name":"chain","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio6_1"},"triportSourcePort":22},{"port":[16],"name":"ai","customName":true,"deviceType":"AIVision","deviceClass":"aivision","setting":{"config":"{\"colors\":[],\"codes\":[],\"tags\":false,\"AIObjects\":true,\"AIObjectModel\":[\"Ball(Blue)\",\"Ball(Green)\",\"Ball(Red)\",\"Ring(Blue)\",\"Ring(Green)\",\"Ring(Red)\",\"Cube(Blue)\",\"Cube(Green)\",\"Cube(Red)\"],\"aiModelDropDownValue\":\"2024-2025 High Stakes\"}","isConfigured":"false"},"triportSourcePort":22},{"port":[8],"name":"clamp","customName":true,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{},"triportSourcePort":22},{"port":[10],"name":"dist","customName":true,"deviceType":"Distance","deviceClass":"distance","setting":{},"triportSourcePort":22}],"slot":2,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.7","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}
